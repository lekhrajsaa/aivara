import React, { useEffect } from "react";
import { useState } from "react";
import { Col, Container, Row } from "reactstrap";
import classes from "./GenerateDetails.module.css";
import Stack from "@mui/material/Stack";
import Button from "@mui/material/Button";
import Snackbar from "@mui/material/Snackbar";
import MuiAlert from "@mui/material/Alert";
import { useSelector } from "react-redux";
import axios from "axios";
import { Xapkey } from "../apikey";
const Alert = React.forwardRef(function Alert(props, ref) {
  return <MuiAlert elevation={6} ref={ref} variant="filled" {...props} />;
});
let messg;
const GenerateDetails = () => {
  const [CompanyName, setCompanyName] = useState();
  const [natureOfWork, setnatureOfWork] = useState();
  const [generated, setgenerated] = useState();
  const [ErrorMessage, setErrorMessage] = useState(false);
  const [Token, setToken] = useState();
  const images = useSelector((state) => state.userdata.lab_images);

  const SubmitReport = async (e) => {
    e.preventDefault();
    if (!CompanyName || !natureOfWork || !generated)
      (messg = "Enter all fileds"), setErrorMessage(true);
    // photos: ["xyz.jpg","abc.png"],
    let body = {
      query: `mutation {
        postReport(reportInput:{
          photos: "${images}",
          companyName: "${String(CompanyName)}",
          natureOfWork: "${String(natureOfWork)}",
          generatedBy: "${String(generated)}"
        }) {
          message
        }
      }`,
      variables: {},
    };
    let options = {
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${String(Token)}`,
        "x-api-key": Xapkey,
      },
    };
    try {
      const resp = await axios.post(
        "http://localhost:5000/api/v1",
        body,
        options
      );
      console.log(resp);
    } catch (err) {
      console.log(err);
    }
  };

  console.log(images);

  useEffect(() => {
    setToken(localStorage.getItem("token"));
  }, []);
  return (
    <>
      <p className={classes.head}>
        {" "}
        <span className={classes.head2}>Generate : </span> Add details
      </p>
      <div
        className={classes.back}
        style={{
          position: "absolute",
          top: "10%",
          left: "78%",
          textDecoration: "underline",
          color: "#000000",
        }}
      >
        <a href="/gen">back</a>
      </div>

      <form>
        <Container fluid className={classes.cont}>
          <Row className={classes.rowe}>
            <Col md={3}>
              <label for="name" className={classes.detail}>
                Name of the company
              </label>
            </Col>
            <Col md={5}>
              <input
                type="text"
                name="CompanyName"
                className={classes.fill}
                value={CompanyName}
                onChange={(e) => setCompanyName(e.target.value)}
              />
            </Col>
          </Row>
          <Row className={classes.rowe}>
            <Col md={3}>
              {" "}
              <label for="nature" className={classes.detail}>
                Nature of work
              </label>
            </Col>
            <Col md={5}>
              <input
                type="text"
                name="natureOfWork"
                className={classes.fill}
                value={natureOfWork}
                onChange={(e) => setnatureOfWork(e.target.value)}
              />
            </Col>
          </Row>
          <Row className={classes.rowe}>
            <Col md={3}>
              {" "}
              <label for="generated" className={classes.detail}>
                Generated by ( technician )
              </label>
            </Col>
            <Col md={5}>
              <input
                type="text"
                name="generated"
                value={generated}
                onChange={(e) => setgenerated(e.target.value)}
                className={classes.fill}
              />
            </Col>
          </Row>
          <button className={classes.sub} onClick={SubmitReport}>
            SUBMIT
          </button>
        </Container>
      </form>

      <Container className={classes.footer}>
        <p> copyright aivara | terms and coditions </p>
      </Container>

      <Stack spacing={2} sx={{ width: "100%" }}>
        <Snackbar
          open={ErrorMessage}
          autoHideDuration={6000}
          onClose={() => setErrorMessage(false)}
        >
          <Alert
            onClose={() => setErrorMessage(false)}
            severity="error"
            sx={{ width: "100%" }}
          >
            {messg}
          </Alert>
        </Snackbar>
      </Stack>
    </>
  );
};
export default GenerateDetails;
